#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Time: 2018/8/7
import unittest
import re
from test_case.test_mathfunc import TestMathFunc
from model.HTMLTestRunner_py2 import HTMLTestRunner
from model.launchfile import Launchfile
import itertools
import tools
import sys
reload(sys)
sys.setdefaultencoding('utf8')

# if __name__ == '__main__':

path = "F:\\myhouse\\MyHouse\\nnProject\\TestFramework\\tianjin.conf"
path = "F:\\myhouse\\MyHouse\\nnProject\\TestFramework\\dongsen.conf"
testa = Launchfile()
# testa.cheakoutCfg()
testb = testa.load_launchfile(path)
print("================")
# print(testb['module_0'])
# # print("****************")
# print("cfg keys are\n", testb.keys())
# print("@@@@@@@@@@@@@@@@")
# # for key in testb.iterkeys():
# #     print(testb[key]["module_name"])
# # print(testb[:]["module_name"])
# print("################")
# module = testb.get("module_8")
# print(module.keys())
# print("%%%%%%%%%%%%%%%%")
# param = module.get("run_param")
# print(param.keys())

print("11111111111111111111")
# a = ['lalla', ['abc', 'wdc'], 'were']
# a = tools.unfold_list(a)
b = 'abc'
c = 'abc'
d = ["/WellOcean/roi_trigger/channel_04_front", "/WellOcean/roi_trigger/channel_04_bak"]
e = ["/WellOcean/roi_trigger/channel_04_front", "/WellOcean/roi_trigger/channel_04_bak"]

bo = tools.check_adaptive(d,e)

print(bo)
print("33333333333333333333")
if False:
    suite = unittest.TestSuite()
    if False:
        tests = [TestMathFunc("test_add"), TestMathFunc("test_minus"), TestMathFunc("test_divide")]
        suite.addTests(tests)
    else:
        # loadTestsFromTestCase()，传入TestCase
        suite.addTests(unittest.TestLoader().loadTestsFromTestCase(TestMathFunc))
        # discover = unittest.defaultTestLoader.discover("F:\\myhouse\\MyHouse\\nnProject\\TestFramework\\", pattern='mathfunc.py')
        # suite.addTests(discover)
    # # 方法三：直接用addTest方法添加单个TestCase
    # suite.addTest(TestMathFunc("test_multi"))
    #
    # # 方法四：用addTests + TestLoader
    # # loadTestsFromName()，传入'模块名.TestCase名'
    # suite.addTests(unittest.TestLoader().loadTestsFromName('test_mathfunc.TestMathFunc'))
    # suite.addTests(
    #     unittest.TestLoader().loadTestsFromNames(['test_mathfunc.TestMathFunc']))  # loadTestsFromNames()，类似，传入列表


    with open('UnittestTextReport.html', 'w') as f:  # 将结果保存到文件中
        runner = HTMLTestRunner(stream=f,
                                title='MathFunc Test Report',
                                description='generated by HTMLTestRunner.',
                                verbosity=3
                                )
        results0 = runner.run(suite)

    # unittest.TestCase()
    # runner = unittest.TextTestRunner(verbosity=2)
    # runner.run(suite)

    # unittest.main(verbosity=3)